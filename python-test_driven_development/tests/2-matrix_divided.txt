Test for module 'matrix_divided'
=============================

Import the module
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use it:

Normal case
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Passing 0 as div
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
        	...
	ZeroDivisionError: division by zero

Lists with not the same size
	>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 2)
	Traceback (most recent call last):
        	...
	TypeError: Each row of the matrix must have the same size

Lists with not only float or integer
	>>> matrix_divided([["test", 2, 3], [4, 5, 6, 7]], 2)
	Traceback (most recent call last):
        	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix is not a list
	>>> matrix_divided("test", 2)
	Traceback (most recent call last):
        	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix is not a list of list
	>>> matrix_divided([1, [4, 5, 6, 7]], 2)
	Traceback (most recent call last):
        	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing no argument
	>>> matrix_divided()
	Traceback (most recent call last):
        	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Missing one argument
	>>> matrix_divided(2)
	Traceback (most recent call last):
        	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
