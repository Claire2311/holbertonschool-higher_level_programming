Test for module 'add_integer'
=============================

Import the module
	>>> add_integer = __import__("0-add_integer").add_integer

Now use it:

Add 2 integers
    >>> add_integer(1, 2)
    3

Add a and b as integer and b is negative
    >>> add_integer(100, -2)
    98

Add with one missing argument
    >>> add_integer(2)
    100

Add a as integer and b as float
    >>> add_integer(100.3, -2)
    98

Error if b is not a float or integer
	>>> add_integer(4, "test")
	Traceback (most recent call last):
        	...
	TypeError: b must be an integer

Error if a is not a float or integer
	>>> add_integer("test", 4)
	Traceback (most recent call last):
        	...
	TypeError: a must be an integer

Error if a and b are not a float or integer
	>>> add_integer("test", "test")
	Traceback (most recent call last):
        	...
	TypeError: a must be an integer

Error if a and b are not a float or integer
	>>> add_integer("test", 1.3)
	Traceback (most recent call last):
        	...
	TypeError: a must be an integer

Error if a and b are not a float or integer
	>>> add_integer(1.3, "test")
	Traceback (most recent call last):
        	...
	TypeError: b must be an integer

Error if NaN
	>>> add_integer(float('NaN'))
	Traceback (most recent call last):
        	...
	ValueError: cannot convert float NaN to integer

Error if float overflow
	>>> add_integer(float('inf'))
	Traceback (most recent call last):
        	...
	OverflowError: cannot convert float infinity to integer